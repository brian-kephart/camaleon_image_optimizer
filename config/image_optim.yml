# see https://github.com/toy/image_optim for more info


### Global options ###

# Allow lossy workers and optimizations (defaults to false)
allow_lossy: true

# Configure cache directory
# cache_dir:

# Also cache worker digests along with original file digest and worker options.
# Updating workers invalidates cache
# cache_worker_digests:

# Nice level, system priority of all used tools with higher value meaning lower
# priority, in range -20..19, negative values can be set only if run by root
# user (defaults to 10)
# nice:

# Require image_optim_pack or disable it, by default image_optim_pack will be
# used if available, will turn on :skip-missing-workers unless explicitly
# disabled (defaults to nil)
# pack:

# Skip workers with missing or problematic binaries (defaults to false)
skip_missing_workers: true

# Number of threads or disable (defaults to number of processors)
# threads:

# Verbose output (defaults to false)
# verbose:


### Worker options ###
# Each worker below can be disabled by passing false instead of options hash or
# by setting option :disable to true

### GIF ###
# gifsicle:
  # true/false = interlace on/off, nil = as is in original image (defaults to
  # running two instances, one with interlace off and one with on)
  # interlace:
  # Compression level: 1 - light and fast, 2 - normal, 3 - heavy (slower) (defaults to 3)
  # level:
  # Avoid bugs with some software (defaults to false)
  # careful:

# JPEG
# jhead: # Worker has no options

jpegoptim:
  # Allow limiting maximum quality (defaults to false)
  allow_lossy: true
  # Maximum image quality factor 0..100, ignored in default/lossless mode (defaults to 100)
  max_quality: 70
  # List of extra markers to strip: :comments, :exif, :iptc, :icc or :all (defaults to :all)
  # strip:

jpegrecompress:
  # Allow worker, it is always lossy (defaults to false)
  allow_lossy: true
  # JPEG quality preset: 0 - low, 1 - medium, 2 - high, 3 - veryhigh (defaults to 3)
  quality: 0

# jpegtran:
  # Copy all chunks (defaults to false)
  # copy_chunks:
  # Use jpegtran through jpegrescan, ignore progressive option (defaults to true)
  # jpegrescan:
  # Create progressive JPEG file (defaults to true)
  # progressive:

# PNG (using multiple workers on PNG is slow, so most are disabled in this config.)
advpng: false
  # Compression level: 0 - don't compress, 1 - fast, 2 - normal, 3 - extra, 4 - extreme
  # (defaults to 4)
  # level:

optipng: false
  # Optimization level preset: 0 is least, 7 is best (defaults to 6)
  # level:
  # true/false = interlace on/off, nil = as is in original image (defaults to false)
  # interlace:
  # Remove all auxiliary chunks (defaults to true)
  # strip:

pngcrush: false
  # List of chunks to remove or :alla - all except tRNS/transparency or :allb -
  # all except tRNS and gAMA/gamma (defaults to :alla)
  # chunks:
  # Fix otherwise fatal conditions such as bad CRCs (defaults to false)
  # fix:
  # Brute force try all methods, very time-consuming and generally not worthwhile
  # (defaults to false)
  # brute:
  # Blacken fully transparent pixels (defaults to true)
  # blacken:

pngout: false # not included in image_optim_pack gem
  # Copy optional chunks (defaults to false)
  # copy_chunks:
  # Strategy: 0 - xtreme, 1 - intense, 2 - longest Match, 3 - huffman Only, 4 - uncompressed (defaults to 0)
  # strategy:

pngquant:
  # Allow quality option (defaults to false)
  allow_lossy: true
  # Maximum number of colors to use (defaults to 256)
  # max_colors:
  # min..max - don't save below min, use less colors below max (both in range
  # 0..100; in yaml - !ruby/range 0..100), ignored in default/lossless mode
  # (defaults to 100..100, 0..100 in lossy mode)
  quality: !ruby/range 0..70
  # speed/quality trade-off: 1 - slow, 3 - default, 11 - fast & rough (defaults to 3)
  # speed:

# SVG
# SVGO list of plugins is here: https://github.com/svg/svgo. Note that each
# plugin has its own enabled/disabled default, so this worker will be effective
# even with enable_plugins set to [].
# svgo: false # not included in image_optim_pack gem
  # List of plugins to disable (defaults to [])
  # disable_plugins:
  # List of plugins to enable (defaults to [])
  # enable_plugins:
